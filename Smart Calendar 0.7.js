/*        Smart Calendar Beta 0.3Smart Mix | ideare, fare, comunicareinfo@smartmix.it041 0980099changelog0.3correzioni santi0.31aggiuiunto lo zero davanti alle cifre0.4aggiunti i preset0.5Correzioni santi0.6Nuovi default presets Smart Mix0.7Creazione del file santi e raggruppamento file nella cartella script##################prossime modifiche•	finestra per la gestione dei preset•	correzione bug calendario senza mese*/var nome = "Smart Calendar (beta) 0.7";var mesiEstesi = ['gennaio','febbraio','marzo','aprile','maggio','giugno','luglio','agosto','settembre','ottobre','novembre','dicembre'];var mesiTreLettere = ['gen','feb','mar','apr','mag','giu','lug','ago','set','ott','nov','dic'];var giorniEstesi = ['domenica','lunedì','martedì','mercoledì','giovedì','venerdì','sabato'];var giorniTreLettere = ['dom','lun','mar','mer','gio','ven','sab'];var giorniIniz = ['d','l','m','m','g','v','s'];var lMesi = [31,28,31,30,31,30,31,31,30,31,30,31];var santiBase = ['Maria S.ma Madre di Dio','S. Basilio','S.mo Nome di Gesù','B. Angela','S. Emiliana','Epifania del Signore','S. Raimondo di P.','S. Massimo','S. Giuliano Martire','S. Milziade','S. Igino','S. Arcadio','S. Ilario','S. Felice di Nola','S. Mauro','S. Marcello I ','S. Antonio Abate','S. Margherita d’U.','S. Mario','S. Sebastiano','S. Agnese','S. Vincenzo','S. Messalina','S. Francesco di S.','Conversione di S.Paolo','S. Timoteo','S. Angela M.','S. Tommaso d’A. ','S. Costanzo ','S. Giacinta M.','S. Giovanni Bosco','S. Verdiana','Presentazione del Signore','S. Biagio','S. Nicola S.','S. Agata','S. Paolo','S. Giuliana','S. Girolamo E.','S. Apollonia','S. Scolastica','Madonna di Lourdes ','S. Eulalia','S. Benigno','S. Valentino','S. Faustino','S. Elia','S. Bonoso','S. Simone Vescovo','S. Corrado C.','S. Amata','S. Pier Damiani','S. Margherita ','S. Policarpo','S. Evezio','S. Cesario','S. Alessandro','S. Gabriele','S. Romano','S. Albino','S. Agnese','S. Tiziano','S. Casimiro','S. Adriano','S. Rosa','S. Perpetua','S. Giovanni Di Dio','S. Francesca R.','S. Macario','S. Costantino','S. Massimiliano','S. Cristina','S. Matilde','S. Longino','S. Eriberto Vescovo','S. Patrizio','S. Cirillo','S. Giuseppe','S. Archippo','S. Serapione','S. Lea','S. Turibio Di M.','S. Caterina di S.','Annunciazione','S. Emanuele','S. Ruperto','S. Castore','S. Secondo Martire','S. Amedeo','S. Beniamino','S. Ugo','S. Francesco','S. Riccardo','S. Isidoro','S. Vincenzo Ferrer','S. Guglielmo','S. Giovanni De La Salle','S. Dionigi','S. Demetrio','S. Terenzio','S. Stanislao','S. Zeno','S. Martino Papa','S. Lamberto','S. Teodoro','S. M. Bernarda S.','S. Aniceto Papa','S. Galdino','S. Leone IX','S. Adalgisa Vergine','S. Anselmo','S. Caio','S. Giorgio','S. Gastone','S. Marco Evangelista','S. Cleto','S. Zita','S. Pietro Chanel','S. Caterina da S.','S. Pio V','S. Giuseppe','S. Atanasio','S. Filippo','S. Ciriaco','S. Gottardo','S. Lucio di C.','S. Domitilla','S. Vittore','S. Pacomio','S. Antonio','S. Gualtiero','S. Leopoldo Mandic','B. Maria V. di F.','S. Mattia','S. Isidoro l’A.','S. Ubaldo','S. PASQUALE CONF.','S. Giovanni I','S. Urbano I','S. Bernardino','S. Cristoforo M.','S. Rita da C.','S. Desiderio','B.V. MARIA AUSILIATRICE','M. Maddalena','S. Filippo Neri','S. Agostino','S. Germano','S. Massimino','S. Giovanna D.A.','Visitazione Maria Vergine','S. Giustino','Festa della Repubblica','S. Carlo Lwanga','S. Quirino','S. Bonifacio','S. Norberto','S. Roberto','S. Medaro Vescovo','S. Efrem','B. Enrico da B.','S. Barnaba','S. Guido','S. Antonio','S. Eliseo','S. Amos','S. Aureliano','S. Raniero','S. Gregorio','S. Gervasio','S. Giovanni','S. Luigi Gonzaga','S. Paolino','S. Lanfranco','Natività di S. Giovanni','S. Massimo','S. Virgilio','S. Cirillo d’A.','S. Ireneo','SS. Pietro e Paolo','SS. Primi Martiri','Sacro Cuore','Cuore Imm. di Maria','S. Tommaso','S. Elisabetta','S. Antonio M. Z.','S. Maria Goretti','S. Panteno','S. Adriano III','S. Veronica G.','S. Rufina','S. Benedetto','S. Giovanni Gualberto','S. Enrico','S. Camillo De L. ','S. Bonaventura','B. Maria V. Monte C.','S. Marcellina','S. Federico','B. Pietro Crisci','S. Margherita','S. Lorenzo da B.','S. M. Maddalena','S. Brigida di S.','S. Cristina','S. Giacomo il Mag.','S. Gioacchino e S. Anna','S. Aurelio','S. Nazario','S. Marta','S. Pietro C.','S. Ignazio di L.','S. Alfonso Dè L.','S. Pietro G. E.','S. Asprenato','S. Giovanni M. Vianney','S. Emidio','Trasfigurazione Signore','S. Sisto II','S. Domenico','S. Teresa B. della C.','S. Lorenzo','S. Chiara d’A.','S. Giovanna F.','S. Ponziano','S. Massimiliano K.','Assunzione B.V.M.','S. Rocco','S. Chiara','S. Elena','S. Giovanni Eudes','S. Bernardo di C.','S. Pio X','B. Maria V. Regina','S. Rosa da Lima','S. Bartolomeo','S. Giuseppe C.','S. Alessandro','S. Monica','S. Agostino','S. Adelfo','S. Pietro','S. Raimondo N.','S. Egidio','S. Elpidio','S. Gregorio M.','S. Rosalia di P.','S. Quinto','S. Zaccaria','S. Regina','Natività B.V.M.','S. Pietro Claver','S. Nicola da T.','S. Proto','S.mo Nome di M.','S. Giovanni C.','Esalt. Croce','M Addolorata','S. Cornelio','S. Roberto B.','S. Arianna','S. Gennaro','S. Andrea Kim','S. Matteo','S. Maurizio','S. Pio da P.','S. Pacifico','S. Cleofa','S. Cosma','S. Vincenzo Dè P.','S. Venceslao','SS. Arcangeli','S. Girolamo','S. Teresa di G.B.','SS. Angeli C.','S. Gerardo','S. Francesco d’A.','S. Placido','S. Bruno','B.V.M. del Rosario','S. Reparata','S. Dionigi','S. Cetteo','S. Alessandro S.','S. Serafino','S. Teofilo','S. Callisto I','S. Teresa di A.','S. Margherita M.A.','S. Ignazio di A.','S. Luca','S. Paolo della C.','S. Vitale','S. Orsola','S. Giovanni Paolo II','S. Giovanni da C.','S. Antonio Claret','S. Gaudenzio','S. Evaristo','S. Fiorenzo','SS. Simone e Giuda','S. Narciso','S. Germano','S. Lucilla','Tutti i Santi','Commemorazione dei Defunti','S. Silvia','S. Carlo B.','S. Donnino','S. Severo','S. Prosdocimo','S. Goffredo','S. Agrippino','S. Leone I Magno','S. Martino di Tours','S. Giosafat','S. Imerio','S. Rufo','S. Alberto Magno','S. Agnese d’A.','S. Elisabetta d’U.','B. Carolina','S. Abdia','Cristo Re','Present. B.V. Maria','S. Cecilia','S. Clemente I','S. Andrea D. Lac','S. Caterina','S. Corrado Vescovo','S. Virgilio','S. Giacomo M.','S. Saturnino Martire','S. Andrea Ap  ','S. Eligio','S. Bibiana','S. Francesco Saverio','S. Barbara','S. Giulio','S. Nicola Vescovo','S. Ambrogio Vescovo','Immacolata Concezione','S. Siro','B. V. di Loreto','S. Damaso Papa','B. Maria V. di G.','S. Lucia V.','S. Giovanni D. Cr.','S. Valeriano','S. Adelaide','S. Lazzaro','S. Graziano','S. Anastasio I','S. Liberato Martire','S. Pietro Canisio','S. Francesca S. C. ','S. Giovanni da Kety','S. Irminia di Treviri','Natività del Signore','S. Stefano','S. Giovanni','SS. Innocenti di B.','S. Tommaso B.','Santa Famiglia','S. Silvestro'];//luna nuova - crescente - piena - calantevar lune1 = ['a','b','c','d'];var lune2 = ['A','B','C','D'];var lune3 = ['e','f','g','h'];var fontLune ="Lune Calendario";var found = new Array (365);var pb = new Window ('palette');//presetvar fileName = 'SmartCalendar_preset.txt';var sep = '|||';var sepL = '///';var scriptPath = getScriptPath().parent.fsName;var scriptFolder = new Folder(scriptPath+"/SmartCalendar_utility");  scriptFolder.create();var filePath = File(scriptFolder+'/'+fileName);var saintFile = File(scriptFolder+'/'+'SmartCalendar_santi.txt');var defaultPreset = ['Default Preset',true,true,true,'completi','completi',1,'[numero]' + sepL + '[tab]' + sepL + '[giorno]' + sepL + '[tab]' + sepL + '[santo]' + sepL + '[tab]' + sepL + '[luna]'+ sepL + '[fine paragrafo]'];var smartmixPreset = '\tornado|||true|||true|||false|||completi|||completi|||1|||[numero]///[tab]///[giorno]///[tab]///[santo]///[tab]///[luna]///[fine paragrafo]///[anno]///[luna]///[giorno]///[mese]\Ski club Fossò tavolo|||false|||true|||true|||abbreviati|||completi|||1|||[numero]///[inter. riga forzata]///[giorno]///[fine paragrafo]\Auto Carrozzeria Moderna|||false|||true|||true|||iniziale|||completi|||1|||[giorno]///[tab]///[numero]///[fine paragrafo]\parrocchia Cazzago|||true|||true|||true|||abbreviati|||abbreviati|||1|||[numero]///[tab]///[luna]///[inter. riga forzata]///[tab]///[giorno]///[tab]///[santo]///[fine paragrafo]\Calendario coin|||false|||true|||false|||abbreviati|||abbreviati|||1|||[tab]///[numero]///[inter. riga forzata]///[tab]///[tab]///[giorno]///[inter. riga forzata]///[tab]///[tab]///[santo]///[tab]///[luna]///[fine paragrafo]'function createSaintFile() {	if(!saintFile.exists){		saintFile.open('w');		saintFile.encoding = "UTF-8";		saintFile.write(elaborateDayList(santiBase))	}}function elaborateDayList(lista){	var listaElaborata = '/ogni riga corrispode ad un giorno\/es.	1_1: 1 gennaio \/	25_9: 25 settembre \/\/personalizzare il file mantenendo la struttura giorno_mese + tabulazione\/\/*****************************';		var mese = 0;	var giorno = 1;	var giorno_mese = '';			for(riga=0; riga<lista.length; riga++){								if(giorno > lMesi[mese]){				mese++;				giorno = 1;				giorno_mese = giorno+'_'+(mese+1);				giorno++;			}else{				giorno_mese = giorno+'_'+(mese+1);				giorno++;			}			listaElaborata = listaElaborata+'\n' + (giorno_mese + '\t' + lista[riga]);			}	return listaElaborata;}function createPresetsFile(){	if(!filePath.exists){		filePath.open('w');		filePath.encoding = "UTF-8";		filePath.write(elaboratePreset(defaultPreset)  + smartmixPreset);		filePath.close();	}}function addPreset(arrayPreset){	createPresetsFile();	filePath.open('a');	filePath.encoding = "UTF-8";	filePath.write('\n' + elaboratePreset(arrayPreset));	filePath.close();}function readPresets(){	createPresetsFile();	filePath.open('r');	var arrayRighe = new Array;	arrayRighe = filePath.read().split('\n');	return arrayRighe;}function elaboratePreset(inputString){	if (typeof inputString == 'string'){		return inputString.split(sep);	}else{		return inputString.join(sep);	}}function getScriptPath() {	try {     return app.activeScript;   } catch(e) {     return File(e.fileName);   }}function getPresetsName(){	var presetArray = readPresets();	createPresetsFile();	var nomi = new Array();	var elenco = new Array();	for(key in presetArray){		var elencoKey = String(presetArray[key]);		elenco = elencoKey.split(sep);		nomi[key]= elenco[0];	}		return nomi;}function getSaint(){	createSaintFile();	saintFile.open('r');	var arrayRighe = new Array;	var santi = new Array;	var santo = new Array;	var counter = 0;	arrayRighe = saintFile.read().split('\n');	for(riga = 0; riga < arrayRighe.length ; riga++) {				if(arrayRighe[riga].charAt(0)=='/') {			continue;		}else{			santo = arrayRighe[riga].split('\t');			santi[counter]= santo[1];			counter++;		}	}	return santi;}main();function main(){    finestra ();}function finestra(){		var oggi = new Date();		var w = new Window ('dialog',nome);    	var PPreset = w.add('panel',[0,0,600,50],'Preset');	PPreset.orientation = 'row';		Psave = PPreset.add('panel',[300,0,600,50]);	var savePreset = Psave.add ('button',[7,5,127,32],'Salva predefinito...');	var nomePreset = Psave.add('edittext',[132,5,287,32],'New Preset');		savePreset.onClick = function(){		var currentSettings = new Array();		currentSettings[0] = nomePreset.text;		currentSettings[1] = startMese.value;		currentSettings[2] = pgBreakAfterM.value;		currentSettings[3] = nZero.value;				if(giorniCompleti.value == true){currentSettings[4] = 'completi';}		else if (giorniAbbreviati.value == true){currentSettings[4]='abbreviati';}		else if (giorniIniziale.value = true){currentSettings[4]='iniziale';}				if(mesiCompleti.value == true){currentSettings[5] = 'completi';}		else if (mesiAbbreviati.value == true){currentSettings[5]='abbreviati';}				if(luna1.value == true){currentSettings[6] = 1;}		else if (luna2.value == true){currentSettings[6] = 2;}		else if (luna3.value == true){currentSettings[6] = 3;}				var currentGenerationList = String(list.items).split(',');				currentSettings[7] = currentGenerationList.join(sepL);						addPreset(currentSettings);		alert('Il nuovo predefinito è stato salvato.');				listPresets.add('item',nomePreset.text);	}		    PPreset.add('statictext',[10,10,150,30],'Segli il predefinito: ');	var listPresets = PPreset.add('dropdownlist',[120,10,270,30],getPresetsName());	listPresets.onChange= function (){		var preset = elaboratePreset(readPresets()[listPresets.selection.index]);				for (key in preset){			if(preset[key] == 'true'){				preset[key]= true;			}else if (preset[key] == 'false'){				 preset[key]= false;			 }		}					startMese.value = preset[1];		pgBreakAfterM.value = preset[2];		nZero.value = preset[3];				if (preset[4]=='completi'){giorniCompleti.value = true;}		else if (preset[4] == 'abbreviati'){giorniAbbreviati.value = true;}		else if (preset[4] == 'iniziale'){giorniIniziale.value = true;}				if (preset[5]=='completi'){mesiCompleti.value = true;}		else if (preset[5] == 'abbreviati'){mesiAbbreviati.value = true;}				if (preset[6]==1){luna1.value = true;}		else if (preset[6]==2){luna2.value=true;}		else if (preset[6]==3){luna3.value= true;}				//elenco di generazione		var listaPreset = preset[7].split(sepL);		var listLenght = list.items.length;		for (it = 0; it < listLenght; it++){list.remove(list.items[0]);}			for(key in listaPreset){list.add('item',listaPreset[key],list.index);}				}    	var gAlto = w.add('group',[0,50,600,300]);	var gBasso = w.add('group',[0,250,600,500]);	var gButton = w.add('group');	var gPub = w.add('group');		var gerenza = gAlto.add('panel',[0,6,295,110]);	//gerenza.add(statictext,undefined,smx);	gerenza.add('statictext',[10,10,295,30],'Progettato e distribuito da Smart Mix');	gerenza.add('statictext',[10,30,295,50],'www.smartmix.it - info@smartmix.it');	gerenza.add('statictext',[10,70,295,90],'Ver. beta - segnala errori a info@smartmix.it');			var gAlto_p1 = gAlto.add('panel',[0,120,295,240], 'informazioni di base');	var gAlto_p2 = gAlto.add('panel',[305,6,600,240]);		//var gAlto_p1_g1 = gAlto_p1.add('group',[0,0,295,120]);	var gAlto_p1_g2 = gAlto_p1.add('group',[0,10,295,120]);		//gAlto_p1_g1.orientation='row';		var gAlto_p2_g1 = gAlto_p2.add('group',[5,5,286,170]);	var gAlto_p2_g2 = gAlto_p2.add('panel',[5,175,286,225],'Scegli lo stile della luna');	gAlto_p2_g2.orientation = 'row';		var gAlto_p2_g1_g1 = gAlto_p2_g1.add('group',[0,10,281,82.5]);	var gAlto_p2_g1_g2 = gAlto_p2_g1.add('group',[0,100,281,165]);		var giorniCompleti = gAlto_p2_g1_g1.add('radiobutton',[0,0,281,20],'Giorno completi (es. Lunedì)');	var giorniAbbreviati = gAlto_p2_g1_g1.add('radiobutton',[0,25,281,45],'Giorni abbreviati (es. Lun)');	var giorniIniziale = gAlto_p2_g1_g1.add('radiobutton',[0,50,281,70],'Giorni iniziale (es. L)');	giorniCompleti.value = true;			var mesiCompleti = gAlto_p2_g1_g2.add('radiobutton',[0,0,281,20],'Mesi completi (es. Gennaio)');	var mesiAbbreviati = gAlto_p2_g1_g2.add('radiobutton',[0,25,281,50],'Mesi abbreviati (es. Gen)');	mesiCompleti.value = true;		var luna1 = gAlto_p2_g2.add('radiobutton',[5,12,90,30],'Luna 1');	var luna2 = gAlto_p2_g2.add('radiobutton',[95,12,185,30],'Luna 2');	gAlto_p2_g2.add('statictext',[190,7,280,20],'Luna 3');	gAlto_p2_g2.add('statictext',[190,17,280,36],'coming soon');		luna1.value = true;			gAlto_p1_g2.add('statictext',[10,10,50,30],'Anno');	var anno = gAlto_p1_g2.add('edittext',[42,10,110,30],oggi.getFullYear()+1)			var startMese = gAlto_p1_g2.add('checkbox',[10,40,295,60],'Scrivi il nome del mese quando inizia');	startMese.value = true;	var pgBreakAfterM = gAlto_p1_g2.add('checkbox',[10,60,295,80],'Interruzione di cornice quando finisce il mese');	pgBreakAfterM.value = true;        var nZero = gAlto_p1_g2.add('checkbox',[10,80,295,100],'Zero davanti ai numeri ad una cifra');    //nZero.value = true;	gBasso.orientation = 'row';	gBasso.add('statictext',[285,0,510,20],'Ordine di generazione');		var el = gBasso.add('edittext',[0,0,110,20]);	var adEl = gBasso.add('button',[120,0,235,20],'Aggiungi >')	adEl.onClick = function(){		list.add('item',el.text,list.index)		el.text ='';	}	var list = gBasso.add('listbox',[285, 30, 510, 250],["[numero]","[tab]","[giorno]","[tab]","[santo]","[tab]","[luna]","[fine paragrafo]"]);	var listaCalendario = gBasso.add('listbox',[0, 30, 235, 250],["[numero]","[giorno]","[santo]","[luna]","[mese]","[anno]","[tab]","[fine paragrafo]","[inter. riga forzata]","[interruzione pagina]","[interruzione cornice]"]);		var adToList = gBasso.add('button',[240,120,275,150],'>')	adToList.onClick = function(){		list.add('item',listaCalendario.selection,list.index);	}		var su = gBasso.add('button',[520,30,600,60],'su');	var giu = gBasso.add('button',[520,60,600,90],'giu');	var rimuovi = gBasso.add('button',[520,218,600,250],'rimuovi');	su.onClick = function(){		var n = list.selection.index;		if (n > 0){		muovi (list.items [n-1], list.items [n]);		list.selection = n-1;		}	}	giu.onClick = function(){		var n = list.selection.index;		if (n < list.items.length-1){		muovi (list.items [n+1], list.items [n]);		list.selection = n+1;		}	}		rimuovi.onClick = function(){		list.remove (list.selection);	}			function muovi (x,y){		var temp = x.text;		x.text = y.text;		y.text = temp;	}		function creaArray(lista){		var array = new Array();		for(i=0; i<lista.items.length;i++){			//alert(toString(lista.items[i].constructor.name));			array[i]=lista.items[i].text;		}		return array;	}	var genera = gButton.add('button',undefined,'genera',{name:'ok'});	var chiudi = gButton.add('button',undefined,'chiudi');     	chiudi.onClick = function(){w.close();}		var myReturn = false;	var gg;	var mm;	genera.onClick = function (){				w.close();				pb.pbar = pb.add ('progressbar', undefined, 0, found.length);		pb.pbar.preferredSize.width = 300;		pb.show();				myReturn = true;	}				w.show();		if (myReturn == true){				if (giorniCompleti.value==true){gg = giorniEstesi;}		else if (giorniAbbreviati.value==true){gg = giorniTreLettere;}		else if (giorniIniziale.value==true){gg = giorniIniz;}		else{var gg = 'giorni';}		if (mesiCompleti.value==true){mm = mesiEstesi;}		else if (mesiAbbreviati.value == true){mm = mesiTreLettere;}		else {var mm = 'mesi'; }				if(luna1.value==true){var moons = lune1;}		else if(luna2.value = true){var moons = lune2;}		else if(luna3.value = true){var moons = lune3;}				/*if(calendarioOlandese.value == true){cn=false;}		else if(calendarioNormale.value == true){cn=true;}*/				cn = false;		        calendario(anno.text,creaArray(list),mm,gg,pgBreakAfterM.value,startMese.value,moons,cn,nZero.value);	}else{		null;	}}// la funzione calendario si occupa di calcolare la corretta cadenza dei giorni in base all'anno scelto.function calendario(year,ordine,mm,gg,pgBm,wM,moons,cn,nZero){    var anno = year;	var mesi = mm;    var giorni = gg;		var santi = getSaint();    var festeStandard = ['1/1','6/1','25/4', '1/5','2/6','15/8','1/11','8/12','25/12','26/12']; //per aggiungere o modificare festività fisse basta modificare questo array es. natale 25/12    //array contentente tutti i giorni dell'anno    var numeri = new Array();    var giorniAnno = new Array ();    var festivi = new Array();    var lune = new Array();		    //è stato scelto il 1 gennaio 2012 come giorno di partenza (day Zero)     var start = 'domenica'; //1 gennaio 2012    var startBisestile = 2012;    /*la funzione è sbagliata di un giorno!!!!!*/    /*FUNZIONE PER IL CALCOLO DELLA FASE LUNARE PER IL GIORNO*/    function faseLuna(DG) { // RITORNA 5 SE C'E' LA LUNA PIENA        DR = new Date(2000,0,1);	// data di riferimento        TL = (((DG - DR) / 1000) + 2114500) % 2551443;        RV = 1        if (TL < 2508243){RV=0;} //8 // CALANTE DA ULTIMO        if (TL < 1956782.25){RV=4;} // ULTIMO QUARTO        if (TL < 1870382.25){RV=0;} //6 // CALANTE DA PIENA        if (TL < 1318921.5){RV=3;} // PIENA        if (TL < 1232521.5){RV=0;} //4 // CRESCENTE DA PRIMO        if (TL < 681060.75){RV=2;} // PRIMO QUARTO        if (TL < 594660.75){RV=0;} //2 // CRESCENTE DA NUOVA        if (TL < 43200){RV=1;} // NUOVA        return RV    }    /*    // esempio chiamata funzione fasi lunari    alert(faseLuna(new Date(2004,10,27)))*/   //funzione che calcola l'anno bisestile    function bisestileCalc (year) {        if(((year - startBisestile)%4)==0){var febbraio = 29;}else{var febbraio = 28;}        return febbraio;    }    //array contenente la lunghezza dei mesi descritti i var mesi    lMesi[1] = bisestileCalc(anno);    //funzione per calcolare il numero del giorno da 1 a 365/366    //attenzione restituisce il numero esatto dell giorno! se applicato ad un array bisogna fare -1    function dayCalc(gg,mm){        var giorno = 0;        for (m=0; m<=mm; m++){            for(g=0; g<lMesi[m]; g++){giorno++;}        }    giorno -= (lMesi[mm]-gg);    return giorno;    }    function reverseDayCalc(giorno){        var data = new Array();                       for(i=0; i<lMesi.length; i++){            if((giorno-lMesi[i])<=0){                var mese = lMesi[i];                data[0]=giorno;                data[1] = i;                break;            }else{ giorno -= lMesi[i];            }        }        return data;    }    //aggiunta di San Giusto negli anni bisestili    if (lMesi[1]==29){santi.splice(59,0,'S. giusto')}    //calcolo di quanti giorni ci sono dal day Zero (1 gennaio 2012) all'inizio dell'anno da calcolare    var day2day0 = 0;    for (i=2012; i<anno; i++){        if(bisestileCalc (i)==29){day2day0 += 366;}else{day2day0 += 365;}    }    // 365 o 366 giorni    var lunghezzaAnno = lMesi[0]+lMesi[1]+lMesi[2]+lMesi[3]+lMesi[4]+lMesi[5]+lMesi[6]+lMesi[7]+lMesi[8]+lMesi[9]+lMesi[10]+lMesi[11];    var numero = 1;    var mese = 0;    for (i=0;i<lunghezzaAnno;i++){        if(numero>lMesi[mese]){numero = 1; mese++}        if(nZero == true){          if(String(numero).length == 1) {var numm = '0'+String(numero); }else{var numm = String(numero);}        }else{            var numm= String(numero);            }    numeri[i]=numm;    numero++;    }        //il primo giorno dell anno    firstDay = giorni[day2day0%7];    //aggiunge all'array giorniAnno tutti i giorni dell'anno scelto    var g = day2day0%7;    for (i=0;i<lunghezzaAnno;i++){        if (g>6){g=0;}        giorniAnno[i] = giorni[g];        if (giorni[g] == giorni[0]){festivi[i]=true;}else{festivi[i]=false;}        g++;    }    //aggiunge all'array festivi tutti i giorni all'interno dell' array feste    for(i=0; i<festeStandard.length; i++){         var giorno = festeStandard[i].split('/');        festivo = dayCalc(giorno[0],giorno[1]-1);        festivi[festivo-1]=true;    }    //calcolo pasqua+++++++++++++++++++++++++++++++++++++++++++++++++++++++    //giorno    var p = 22;    //lMesi[2] marzo    var m = 2;    //calcolo prima luna piena di primavera    for ( i=0; i<100; i++) { 		lunaPasqua = faseLuna(new Date(parseInt(anno),(m),p));        if(lunaPasqua==3) {break;}        else{			p++;        	if((lMesi[m] - p)<0){m++; p=1;}		}    }	    var lunapienaPasqua = dayCalc(p,m);    //pasqua è la domenica dopo la prima luna piena di primavera    // teoricamente andrebbe messo lunapienaPasqua+1 ma è gia aggiunto all'interno visto che la funzione dayCalc restituisce il giorno esatto e non quello dell'array    var Pasqua = lunapienaPasqua;    for (i=0; i<7;i++){        if(giorniAnno[Pasqua]==giorni[0]){break}        Pasqua++;    }		var befana = (dayCalc(6,0));	var battesimo = befana+1;	for (i=0; i<7;i++){if(giorniAnno[battesimo]==giorni[0]){break}battesimo++}		santi[battesimo] = 'Battesimo del Signore';	    santi[Pasqua]='Pasqua';    santi[Pasqua+1]="Lunedì dell'Angelo"    festivi[Pasqua+1]=true;    santi[Pasqua-7] = "Le Palme";    santi[Pasqua-14] = "V di Quaresima";    santi[Pasqua-21] = "IV di Quaresima";    santi[Pasqua-28] = "III di Quaresima";    santi[Pasqua-35] = "II di Quaresima";    santi[Pasqua-42] = "I di Quaresima";    santi[Pasqua-46] = "Le Ceneri";    santi[Pasqua-47] = "Martedì Grasso";	santi[Pasqua+7] = "D. in Albis";    santi[Pasqua+42]="Ascensione del Signore";    santi[Pasqua+49]="Pentecoste";    santi[Pasqua+56]="SS. Trinità";    santi[Pasqua+63]="Corpus Domini";    natale = dayCalc(25,11);    IVdiAvvento = natale-2;    for (i=0; i<7;i++){if(giorniAnno[IVdiAvvento]==giorni[0]){break}IVdiAvvento--}    santi[IVdiAvvento] = "IV di Avvento";    santi[IVdiAvvento-7] = "III di Avvento";    santi[IVdiAvvento-14] = "II di Avvento";    santi[IVdiAvvento-21] = "I di Avvento";	santi[IVdiAvvento-28] = "Cristo Re";    var giorno;        for(j=0; j<lunghezzaAnno; j++){        var giorno = reverseDayCalc (j);        lune[j-1]= faseLuna (new Date(parseInt(anno),giorno[1],giorno[0]));    }        genTextFramePRO (ordine,anno,mesi,numeri,giorniAnno,santi,lunghezzaAnno,festivi,lune,true,true,true,true,true,true,true,pgBm,wM,moons,giorni,cn);}/*impaginazione+++++++++++++++++++++++++++++++++++++++++++++++++*///PARTE RELATIVA AL POSIZIONAMENTO DENTRO INDESIGNfunction genTextFramePRO(ordine, anno,mesi,numeri,giorniAnno,santi,lunghezzaAnno,festivi,lune,PSmesi,PSfestivi,PSferiali,CSnumero, CSgiorno, CSsanto, CSlune,pgBm,wM,moons,giorni,cn) {    //PSfestivi e PSferiali accettano vaiabili true o false, abilitano o disabilitano gli stili di paragrafo    var myDocument= app.documents.item(0);	    var myPage = myDocument.pages.item(0);		if(app.selection.length==1){				var myTextFrame = app.selection[0].insertionPoints[0];			}else{	    	    var myTextFrame = myPage.textFrames.add();		myTextFrame.geometricBounds = [10, 10, 287 , 200];	}						var fonts = myDocument.fonts;		    //Set the bounds of the text frame	    		            //creazione degli stili di paragrafo e di carattere    if(PSfestivi==true){        try{            var festiviStyle = myDocument.paragraphStyles.add({name:"festivi"});			try{festiviStyle.appliedFont = app.fonts.item('Arial Black');}catch(errore){}        }catch(errore){            //alert("è già presente uno stile di paragrafo festivi, verrà applicato lo stile esistente");            var festiviStyle = myDocument.paragraphStyles.item("festivi");        }    }    if(PSmesi==true){        try{            var mesiStyle = myDocument.paragraphStyles.add({name:"mesi"});			try{mesiStyle.appliedFont = app.fonts.item('Arial Black');}catch(errore){}        }catch(errore){            //alert("è già presente uno stile di paragrafo feriali, verrà applicato lo stile esistente");             var mesiStyle = myDocument.paragraphStyles.item("mesi");        }    }		var CSmesi=true;	    if(CSmesi==true){        try{            var meseCStyle = myDocument.characterStyles.add({name:"mesi"});        }catch(errore){            //alert("è già presente uno stile di carattere numero, verrà applicato lo stile esistente");            var meseCStyle = myDocument.characterStyles.item("mesi");        }    }    if(PSferiali==true){        try{            var ferialiStyle = myDocument.paragraphStyles.add({name:"feriali"});			try{ferialiStyle.appliedFont = app.fonts.item('Arial');}catch(errore){}        }catch(errore){            //alert("è già presente uno stile di paragrafo feriali, verrà applicato lo stile esistente");             var ferialiStyle = myDocument.paragraphStyles.item("feriali");        }    }    if(CSnumero==true){        try{            var numeroStyle = myDocument.characterStyles.add({name:"numero"});        }catch(errore){            //alert("è già presente uno stile di carattere numero, verrà applicato lo stile esistente");            var numeroStyle = myDocument.characterStyles.item("numero");        }    }    if(CSgiorno==true){        try{            var giornoStyle = myDocument.characterStyles.add({name:"giorno"});			        }catch(errore){            //alert("è già presente uno stile di carattere giorno, verrà applicato lo stile esistente");            var giornoStyle = myDocument.characterStyles.item("giorno");        }    }    if(CSsanto==true){        try{            var santoStyle = myDocument.characterStyles.add({name:"santo"});        }catch(errore){            //alert("è già presente uno stile di carattere santo, verrà applicato lo stile esistente");            var santoStyle = myDocument.characterStyles.item("santo");        }    }    if(CSlune==true){        try{            var luneStyle = myDocument.characterStyles.add({name:"lune"});			try{luneStyle.appliedFont = app.fonts.item(fontLune);}catch(errore){alert('devi installare la font '+fontLune+' per vedere correttamente le lune');}        }catch(errore){            //alert("è già presente uno stile di carattere santo, verrà applicato lo stile esistente");            var luneStyle = myDocument.characterStyles.item("lune");			try{luneStyle.appliedFont = fontLune;}catch(errore){alert('devi installare la font '+fontLune+' per vedere correttamente le lune');}        }    }		//var ordine = ["[numero]","\t","[numero]","\t","funziona","\t","[giorno]","\t","[santo]","\t","[lune]"];		//var moons = lune1;		//var cn = true;	var chBeforeCalNormale = SpecialCharacters.frameBreak;		var frameBreakMonth = pgBm;	var writeMonth = wM;	var chAfterMonth = '\r';	var chBeferoMonth = '';		var month = -1;			for (i=0; i<lunghezzaAnno;i++){		pb.pbar.value = i+1;				if(numeri[i]==1){			month++;			if (frameBreakMonth == true){				if(month>0){					myTextFrame.parentStory.characters.item(-1).contents=SpecialCharacters.frameBreak;				}			}						if (writeMonth == true){				myTextFrame.parentStory.insertionPoints.item(-1).contents=chBeferoMonth;				myTextFrame.parentStory.insertionPoints.item(-1).contents=mesi[month];				myTextFrame.parentStory.insertionPoints.item(-1).contents=chAfterMonth;				myTextFrame.parentStory.paragraphs.item(-1).applyParagraphStyle(mesiStyle, true);				myTextFrame.parentStory.paragraphs.item(-1).applyCharacterStyle(meseCStyle,true);			}else{myTextFrame.parentStory.insertionPoints.item(-1).contents = ' ';}						if(cn == true){						if(giorniAnno[i] != giorni[1]){					for (k in giorni){if(giorni[k]==giorniAnno[i]){var indice = k; break;}}					var spazi = indice-1;					if(spazi==-1){spazi=6;}					for (c = 0; c<spazi; c++){myTextFrame.parentStory.insertionPoints.item(-1).contents=chBeforeCalNormale;}									}			}				}				for(key in ordine){			if (ordine[key]=='[giorno]'){		        myTextFrame.parentStory.characters.item(-1).applyCharacterStyle(giornoStyle,true);		        myTextFrame.parentStory.insertionPoints.item(-1).contents=giorniAnno[i];			}else if (ordine[key]=='[numero]'){		        myTextFrame.parentStory.characters.item(-1).applyCharacterStyle(numeroStyle,true);        		        myTextFrame.parentStory.insertionPoints.item(-1).contents= numeri[i]+'';			}else if (ordine[key]=='[santo]'){		        myTextFrame.parentStory.characters.item(-1).applyCharacterStyle(santoStyle,true);		        myTextFrame.parentStory.insertionPoints.item(-1).contents=santi[i];			}else if(ordine[key]=='[luna]'){		        if(lune[i] != 0) {		            if(lune[i] == 1){myTextFrame.parentStory.characters.item(-1).applyCharacterStyle(luneStyle,true); myTextFrame.parentStory.insertionPoints.item(-1).contents=moons[0];}		            if(lune[i] == 2){myTextFrame.parentStory.characters.item(-1).applyCharacterStyle(luneStyle,true); myTextFrame.parentStory.insertionPoints.item(-1).contents=moons[1];}		            if(lune[i] == 3){myTextFrame.parentStory.characters.item(-1).applyCharacterStyle(luneStyle,true); myTextFrame.parentStory.insertionPoints.item(-1).contents=moons[2];}		            if(lune[i] == 4){myTextFrame.parentStory.characters.item(-1).applyCharacterStyle(luneStyle,true); myTextFrame.parentStory.insertionPoints.item(-1).contents=moons[3];}		        }else{					myTextFrame.parentStory.insertionPoints.item(-1).contents='';				}			}else if(ordine[key]=='[fine paragrafo]'){				myTextFrame.parentStory.insertionPoints.item(-1).contents='\r';			}else if(ordine[key]=='[inter. riga forzata]'){				myTextFrame.parentStory.insertionPoints.item(-1).contents='\n';			}else if(ordine[key]=='[interruzione pagina]'){				myTextFrame.parentStory.insertionPoints.item(-1).contents=SpecialCharacters.pageBreak;			}else if(ordine[key]=='[interruzione cornice]'){				myTextFrame.parentStory.insertionPoints.item(-1).contents= SpecialCharacters.frameBreak;			}else if(ordine[key]=='[tab]'){				myTextFrame.parentStory.insertionPoints.item(-1).contents= '\t';			}else if(ordine[key]=='[mese]'){				myTextFrame.parentStory.insertionPoints.item(-1).contents= mesi[month];			}else if(ordine[key]=='[anno]'){					myTextFrame.parentStory.insertionPoints.item(-1).contents= parseInt(anno)+'';				}else{				myTextFrame.parentStory.insertionPoints.item(-1).contents=ordine[key];			}								}				 if(festivi[i]==true){myTextFrame.parentStory.paragraphs.item(-1).applyParagraphStyle(festiviStyle, true);}else{myTextFrame.parentStory.paragraphs.item(-1).applyParagraphStyle(ferialiStyle, true);}			}}